//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace IGOR.EntityModel.Entities
{
	using System;
	using System.Collections.Generic;
    using System.ComponentModel;

    public abstract partial class Component
	{
		[System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
		public Component()
		{
			this.OrderItems = new HashSet<OrderItem>();
		}

		public int Id { get; set; }

		[DisplayName("Осталось")]
		public int Count { get; set; }

		[DisplayName("Наименование")]
		public string Name { get; set; }

		[DisplayName("Цена")]
		public float Price { get; set; }

		[DisplayName("Производитель")]
		public int ManufacturerId { get; set; }

		public virtual Manufacturer Manufacturer { get; set; }
		[System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
		public virtual ICollection<OrderItem> OrderItems { get; set; }

		public virtual Exception Validate()
		{
			if (Count < 0) {
				return new Exception($"Число компонентов не может быть отрицательным ({Count}).");
			} else if (string.IsNullOrWhiteSpace(Name)) {
				return new Exception($"Не указано наименование компонента ({Name}).");
			} else if (Price < 0) {
				return new Exception($"Цена компонента не может быть отрицательной ({Price}).");
			} else if (ManufacturerId < 1) {
				return new Exception($"Не указан производитель компонента ({ManufacturerId}).");
			}

			return null;
		}
	}
}
